import type { NextPage, GetStaticProps, InferGetStaticPropsType } from "next";
import Head from "next/head";
import { buildClient, IPostFields } from "../lib/contentful";
import Link from "next/link";
import { Entry, EntryCollection } from "contentful";
import DarkModeButton from "../components/DarkModeButton";

export const getStaticProps: GetStaticProps = async () => {
  const client = buildClient();
  const { items }: EntryCollection<IPostFields> = await client.getEntries({
    content_type: "post",
    order: "-sys.createdAt",
  });
  return {
    props: { posts: items },
  };
};

type Props = InferGetStaticPropsType<typeof getStaticProps>;

const Home: NextPage<Props> = ({ posts }) => {
  console.info(posts[1].fields.createdAt);
  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <DarkModeButton />
      <main className="grid h-screen w-full place-items-center content-start justify-center">
        <h1 className="mb-12 mt-6 text-center text-3xl lg:text-5xl">
          kichion&apos;s tech blog
        </h1>
        <div>
          <ul className="list-disc">
            {posts &&
              posts.map((post: Entry<IPostFields>) => {
                const createdAt = new Date(post.sys.createdAt);
                const updatedAt = new Date(post.sys.updatedAt);
                return (
                  <li
                    key={post.sys.id}
                    className="flex w-full flex-row justify-start pb-4"
                  >
                    <Link href={post.fields.slug} className="w-3/4">
                      <h2 className="underline">{post.fields.title}</h2>
                    </Link>
                    <dl className="flex w-1/4 flex-row flex-wrap items-end">
                      <dt className="w-16 text-xs">createdAt:</dt>
                      <dd className="w-36 text-sm">
                        {createdAt.toLocaleDateString()}{" "}
                        {createdAt.toLocaleTimeString()}
                      </dd>
                      <dt className="w-16 text-xs">updatedAt:</dt>
                      <dd className="w-36 text-sm">
                        {updatedAt.toLocaleDateString()}{" "}
                        {updatedAt.toLocaleTimeString()}
                      </dd>
                    </dl>
                  </li>
                );
              })}
          </ul>
        </div>
      </main>
    </div>
  );
};

export default Home;
